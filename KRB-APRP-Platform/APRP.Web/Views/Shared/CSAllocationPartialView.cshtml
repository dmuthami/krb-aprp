@model APRP.Web.ViewModels.CSAllocationViewModel

@{
    Layout = null;
}


<table class="subscription-table responsive-table striped" id="page-length-option">
    <thead>
        <tr>
            <th>
                Code
            </th>
            <th>
                Name
            </th>
            <th>
                Amount
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.CSAllocations.Any())
        {
            foreach (var item in Model.CSAllocations)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Authority.Code)
                    </td>
                    <td>
                        @{
                            @Html.DisplayFor(modelItem => item.Authority.Name)
                        }
                    </td>
                    <td>
                        @{
                            var amount = item.Amount;
                            @String.Format("{0:0,0.00}", amount)
                        }
                    </td>
                    <td>
                        @if ((await AuthorizationService.AuthorizeAsync(User, "Permissions.CSAllocation.Change")).Succeeded)
                        {
                            <a onclick="ShowinPopUp('@Url.Action("AddEdit","CSAllocation", new { id = @item.ID },Context.Request.Scheme)','Edit')">
                                <i class="material-icons pink-text">mode_edit</i>
                            </a>
                        }

                        @if ((await AuthorizationService.AuthorizeAsync(User, "Permissions.CSAllocation.View")).Succeeded)
                        {
                            <a asp-controller="CSAllocation" asp-action="Details" asp-route-ID="@item.ID">
                                <i class="material-icons pink-text">details</i>
                            </a>
                        }


                        @if ((await AuthorizationService.AuthorizeAsync(User, "Permissions.CSAllocation.Delete")).Succeeded)
                        {
                            <a onclick="ShowinPopUp('@Url.Action("Delete","CSAllocation", new { id = @item.ID },Context.Request.Scheme)','Delete')">
                                <i class="material-icons pink-text">delete</i>
                            </a>
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@*<div class="row">
    <div class="col xl12 l12 m12 s12">
        @if ((await AuthorizationService.AuthorizeAsync(User, "Permissions.ActivityItem.Add")).Succeeded)
        {
            <a asp-action="ActivityListCreate" asp-route-ItemActivityGroupId="2" class="waves-effect waves-light btn">
                <i class="material-icons right">gps_fixed</i>Add Activity Item
            </a>
        }
        <a id="IDBackToList2" class="waves-effect waves-light btn"><i class="material-icons right">gps_fixed</i>Back</a>
    </div>
</div>*@

<script language="javascript">
    $('#page-length-option').DataTable({
        "paging": true
        //,"lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]]
    });
</script>